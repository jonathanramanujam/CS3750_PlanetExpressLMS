@page "{assignmentId:int}"
@model CS3750_PlanetExpressLMS.Pages.ViewSubmissionsModel
@{
    ViewData["Title"] = "Submissions";
    Layout = "Shared/_GeneralLayout.cshtml";
}

<div class="container">
    <main role="main" class="pb-3">
            <!--Div that will hold the pie charts-->
        <div id="chart_div"></div>

        <h1>Submissions</h1>
        @*Heading for submissions table*@
        <div class="grid-container-4col">
            <div class="grid-item">
                <b>Student</b>
            </div>
            <div class="grid-item">
                <b>Time Submitted</b>
            </div>
            <div class="grid-item">
                <b>Current Grade</b>
            </div>
            <div class="grid-item">

            </div>
        </div>

        @for(int i = 0; i < Model.Submissions.Count; i++)
        {
            <div class="grid-container-4col">
                <div class="grid-item">
                    @Model.UsersWithSubmissions[i].FirstName @Model.UsersWithSubmissions[i].LastName
                </div>
                @*Displays in red text and appends "(late)" to the submission time if the submission is late*@
                <div class="grid-item">
                    <span class="@(Model.SubmissionIsLate[i] ? "text-danger" : "")">@Model.Submissions[i].SubmissionTime </span>
                    @if(Model.SubmissionIsLate[i])
                    {
                        <span class="text-danger">(late)</span>
                    }
                </div>
                <div class="grid-item">
                    @Model.Submissions[i].Grade / @Model.Assignment.PointsPossible
                </div>
                @if(Model.Submissions[i].Grade == null)
                {
                    <div class="grid-item">
                        <a class="btn btn-primary" asp-page="gradesubmission/" asp-route-userId="@Model.user.ID" asp-route-submissionId="@Model.Submissions[i].ID">Grade</a>
                    </div>
                }
                else
                {
                <div class="grid-item">
                    <a class="btn btn-secondary" asp-page="gradesubmission/" asp-route-userId="@Model.user.ID" asp-route-submissionId="@Model.Submissions[i].ID">Re-grade</a>
                </div>
                }
            </div>
        }
    </main>
</div>


@section ChartScripts {
    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

      // Load the Visualization API and the corechart package.
      google.charts.load('current', {'packages':['corechart']});



      // Set a callback to run when the Google Visualization API is loaded.
      //Any additional charts will be created in additional functions.
      //Make sure to call the functions in this section
      google.charts.setOnLoadCallback(drawChart);
      google.charts.setOnLoadCallback(drawUserChart);




      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      //Google preset pie chart
      function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');
        data.addRows([
          ['Mushrooms', 3],
          ['Onions', 1],
          ['Olives', 1],
          ['Zucchini', 1],
          ['Pepperoni', 2]
        ]);

        // Set chart options
        var options = {'title':'How Much Pizza I Ate Last Night',
                       'width':400,
                       'height':300};

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
      }


    </script>
}